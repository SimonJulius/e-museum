@use '../functions/functions';
@use 'sass:map';

@mixin fluid-size-mixin($property, $map) {
    $length: length(map-keys($map));

    @if ($length < 2) {
        @error "$map must be at least 2";
    }

    $map: functions.map-sort($map);
    $keys: map.keys($map);
    $desktop-width: nth($keys, 1);
    $prop-val-at-desktop: map.get($map, $desktop-width);
    #{$property}: functions.linear-regression(($desktop-width: $prop-val-at-desktop,
            nth($keys, 2): map.get($map, nth($keys, 2))));

    // #{$property}: map.get($map, nth($keys, 1));
    @for $i from 2 through ($length) {
        @media (max-width: nth($keys, $i)) {
            $value1: map.get($map, nth($keys, $i - 1));
            $value2: map.get($map, nth($keys, ($i)));

            @if ($value1 !=$value2) {
                #{$property}: functions.linear-regression((nth($keys, $i - 1): $value1,
                            nth($keys, ($i)): $value2 ));
            }

            @else {
                #{$property}: $value1;
            }
        }
    }
}

@mixin headings {

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        @content;
    }
}

@mixin mq-break-point($arg1, $arg2: null) {
    @media screen and (max-width: $arg1) {
        @content;
    }

    @if type-of($arg2)==string {
        @media screen and (min-width: $arg1) and (max-width: $arg2) {
            @content;
        }
    }
}